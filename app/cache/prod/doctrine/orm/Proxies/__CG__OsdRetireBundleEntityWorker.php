<?php

namespace Proxies\__CG__\Osd\RetireBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Worker extends \Osd\RetireBundle\Entity\Worker implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdWorker()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idWorker"];
        }
        $this->__load();
        return parent::getIdWorker();
    }

    public function setIdWorker($idWorker)
    {
        $this->__load();
        return parent::setIdWorker($idWorker);
    }

    public function setOmang($omang)
    {
        $this->__load();
        return parent::setOmang($omang);
    }

    public function getOmang()
    {
        $this->__load();
        return parent::getOmang();
    }

    public function setWorkerTitle($workerTitle)
    {
        $this->__load();
        return parent::setWorkerTitle($workerTitle);
    }

    public function getWorkerTitle()
    {
        $this->__load();
        return parent::getWorkerTitle();
    }

    public function setWorkerName($workerName)
    {
        $this->__load();
        return parent::setWorkerName($workerName);
    }

    public function getWorkerName()
    {
        $this->__load();
        return parent::getWorkerName();
    }

    public function setWorkerSurname($workerSurname)
    {
        $this->__load();
        return parent::setWorkerSurname($workerSurname);
    }

    public function getWorkerSurname()
    {
        $this->__load();
        return parent::getWorkerSurname();
    }

    public function setBirthDay($birthDay)
    {
        $this->__load();
        return parent::setBirthDay($birthDay);
    }

    public function getBirthDay()
    {
        $this->__load();
        return parent::getBirthDay();
    }

    public function setDateOfEmployment($dateOfEmployment)
    {
        $this->__load();
        return parent::setDateOfEmployment($dateOfEmployment);
    }

    public function getDateOfEmployment()
    {
        $this->__load();
        return parent::getDateOfEmployment();
    }

    public function getRetireYear()
    {
        $this->__load();
        return parent::getRetireYear();
    }

    public function getTimeToRetirement()
    {
        $this->__load();
        return parent::getTimeToRetirement();
    }

    public function formatTimeInterval($aDateDif, $format)
    {
        $this->__load();
        return parent::formatTimeInterval($aDateDif, $format);
    }

    public function getYearsLeft()
    {
        $this->__load();
        return parent::getYearsLeft();
    }

    public function getMonthsLetf()
    {
        $this->__load();
        return parent::getMonthsLetf();
    }

    public function getDaysLeft()
    {
        $this->__load();
        return parent::getDaysLeft();
    }

    public function setFileNumber($fileNumber)
    {
        $this->__load();
        return parent::setFileNumber($fileNumber);
    }

    public function getFileNumber()
    {
        $this->__load();
        return parent::getFileNumber();
    }

    public function setAIdWorkerStatus(\Osd\RetireBundle\Entity\WorkerStatus $aIdWorkerStatus = NULL)
    {
        $this->__load();
        return parent::setAIdWorkerStatus($aIdWorkerStatus);
    }

    public function getAIdWorkerStatus()
    {
        $this->__load();
        return parent::getAIdWorkerStatus();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idWorker', 'omang', 'workerTitle', 'workerName', 'workerSurname', 'birthDay', 'dateOfEmployment', 'fileNumber', 'aIdWorkerStatus');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}